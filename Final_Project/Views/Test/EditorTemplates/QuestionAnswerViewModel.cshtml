<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/lib/codemirror.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/3024-day.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/3024-night.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/abcdef.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/ambiance.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/base16-dark.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/bespin.css">
<link rel="stylesheet" href="~/Scripts/codemirror-5.40.0/theme/base16-light.css">

<script src="~/Scripts/codemirror-5.40.0/lib/codemirror.js"></script>
<script src="~/Scripts/codemirror-5.40.0/mode/javascript/javascript.js"></script>
<script src="~/Scripts/codemirror-5.40.0/addon/selection/active-line.js"></script>
<script src="~/Scripts/codemirror-5.40.0/addon/edit/matchbrackets.js"></script>
@model PL.Models.QuestionAnswerViewModel


<div>
    @Html.HiddenFor(x => x.Question_ID)
    @if (Model.ISFULL == false)
    {
        <h3>@Model.content</h3>


        foreach (var a in Model.Answers)
        {

            <p>
                @Html.RadioButtonFor(b => b.SelectedAnswer, a.Answer_ID) @a.content
            </p>

        }

    }
    else
    {
        <h3>@Model.content</h3>

        <script>
            console.log("a");
        </script>
        <style type="text/css">
            .CodeMirror {
                border: 1px solid black;
                font-size: 13px
            }
        </style>




        <form>
            @Html.TextAreaFor(b=>b.FullOpen,new {@id="code"})
        </form>

        <p>
            Select a theme: <select onchange="selectTheme()" id=select>
                <option selected>default</option>
                <option>3024-day</option>
                <option>3024-night</option>
                <option>abcdef</option>
                <option>ambiance</option>
                <option>base16-dark</option>
                <option>base16-light</option>
                <option>bespin</option>
                <option>blackboard</option>
                <option>cobalt</option>
                <option>colorforth</option>
                <option>darcula</option>
                <option>dracula</option>
                <option>duotone-dark</option>
                <option>duotone-light</option>
                <option>eclipse</option>
                <option>elegant</option>
                <option>erlang-dark</option>
                <option>gruvbox-dark</option>
                <option>hopscotch</option>
                <option>icecoder</option>
                <option>idea</option>
                <option>isotope</option>
                <option>lesser-dark</option>
                <option>liquibyte</option>
                <option>lucario</option>
                <option>material</option>
                <option>mbo</option>
                <option>mdn-like</option>
                <option>midnight</option>
                <option>monokai</option>
                <option>neat</option>
                <option>neo</option>
                <option>night</option>
                <option>oceanic-next</option>
                <option>panda-syntax</option>
                <option>paraiso-dark</option>
                <option>paraiso-light</option>
                <option>pastel-on-dark</option>
                <option>railscasts</option>
                <option>rubyblue</option>
                <option>seti</option>
                <option>shadowfox</option>
                <option>solarized dark</option>
                <option>solarized light</option>
                <option>the-matrix</option>
                <option>tomorrow-night-bright</option>
                <option>tomorrow-night-eighties</option>
                <option>ttcn</option>
                <option>twilight</option>
                <option>vibrant-ink</option>
                <option>xq-dark</option>
                <option>xq-light</option>
                <option>yeti</option>
                <option>zenburn</option>
            </select>
        </p>
        <script>
            var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
                lineNumbers: true,
                styleActiveLine: true,
                matchBrackets: true
            });
            var input = document.getElementById("select");
            function selectTheme() {
                var theme = input.options[input.selectedIndex].textContent;
                editor.setOption("theme", theme);
                location.hash = "#" + theme;
            }
            var choice = (location.hash && location.hash.slice(1)) ||
                (document.location.search &&
                    decodeURIComponent(document.location.search.slice(1)));
            if (choice) {
                input.value = choice;
                editor.setOption("theme", choice);
            }
            CodeMirror.on(window, "hashchange", function () {
                var theme = location.hash.slice(1);
                if (theme) { input.value = theme; selectTheme(); }
            });
          
        </script>
        <script>
             
        </script>
        
        <input type="submit" />
    }
</div>
   


