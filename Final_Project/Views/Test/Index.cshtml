@model PL.Models.TestAnswerViewModel
@{




    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Test</h4>
    <h2 id="countdown"></h2>
    <hr />



    <h2>@Html.DisplayFor(modelitem => Model.Topic)</h2>
    @using (Html.BeginForm("Check", "Test", FormMethod.Post, new { id = "Form" }))
    {
        @Html.HiddenFor(model => model.Test_ID)
        @Html.HiddenFor(model => model.Student_ID)
        @Html.HiddenFor(model => model.Topic)
        @Html.HiddenFor(model => model.Questions.Count)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(x => x.Questions)

    }
</div>



    <script>
    var dt = @Model.TimeForTest*60;

    function showRemaining() {
        dt--;
        if (dt < 0) {
            clearInterval(timer);
            document.getElementById('countdown').innerHTML = 'EXPIRED!';
            document.getElementById("Form").submit();

            return;
        }
        var minutes = Math.floor(dt / 60);
        var seconds = dt % 60;
        document.getElementById('countdown').innerHTML = minutes + ':';
        document.getElementById('countdown').innerHTML += seconds;
    }
    timer = setInterval(showRemaining, 1000);
    </script>
}
